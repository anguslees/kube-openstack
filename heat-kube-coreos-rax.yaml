heat_template_version: 2013-05-23

description: Deploy a CoreOS cluster that operates a Kubernetes cluster

parameters:
  kubernetes-master-count:
    description: Number of CoreOS machines to deploy as Kubernetes Master
    type: number
    default: 1
    constraints:
    - range:
        min: 1
        max: 1
      description: Must be exactly 1 master (for now).
  kubernetes-minion-count:
    description: Number of CoreOS machines to deploy as Kubernetes Minion
    type: number
    default: 3
    constraints:
    - range:
        min: 2
        max: 12
      description: Must be between 2 and 12 servers.
  key-name:
    type: string
    description: Name of key-pair to be used for compute instance
  flavor:
    type: string
    default: 4 GB Performance
    constraints:
    - allowed_values:
      - 2 GB Performance
      - 4 GB Performance
      - 8 GB Performance
      - 15 GB Performance
      - 30 GB Performance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.
  coreos-image:
    type: string
    description: CoreOS image to install (also implies track for updates)
    # needs to *install* at least 440 in order to get a fixed nova-agent-watcher.
    # NB: nova-agent-watcher is in oem partition and won't be upgraded post-install :(
    default: CoreOS (Beta)

resources:

  coreos-cluster-uuid:
    type: OS::Heat::RandomString

  priv_network:
    type: Rackspace::Cloud::Network
    properties:
      label: kubernetes
      cidr: 192.168.2.0/23

  discovery:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key-name }
      image: { get_param: coreos-image }
      flavor: 2 GB Performance
      name: "discovery"
      user_data_format: RAW
      config_drive: "true"
      user_data: |
        #cloud-config

        coreos:
          update:
            reboot-strategy: reboot

          units:
            - name: private-discovery.service
              command: start
              content: |
                [Unit]
                After=network-online.target
                Requires=network-online.target
                After=docker.service
                Requires=docker.service

                [Service]
                TimeoutStartSec=300
                ExecStartPre=-/usr/bin/docker kill discovery
                ExecStartPre=-/usr/bin/docker rm discovery
                ExecStartPre=/usr/bin/docker pull coreos/etcd
                ExecStart=/usr/bin/docker run --rm --name discovery -p 4001:4001 -p $private_ipv4:7001:7001 coreos/etcd
                ExecStop=/usr/bin/docker stop discovery
                Restart=always
                RestartSec=30

  master_machines:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: kubernetes-master-count }
      resource_def:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key-name }
          image: { get_param: coreos-image }
          flavor: { get_param: flavor }
          name: kubernetes-master-%index%
          networks:
          - uuid: "00000000-0000-0000-0000-000000000000"
          - uuid: "11111111-1111-1111-1111-111111111111"
          - uuid: { get_resource: priv_network }
          user_data_format: RAW
          config_drive: "true"
          user_data:
            str_replace:
              template: |
                #cloud-config

                coreos:
                  etcd:
                    name: kubernetes-master-%index%
                    discovery: http://%discovery%:4001/v2/keys/_etcd/registry/%uuid%
                    addr: $private_ipv4:4001
                    peer-addr: $private_ipv4:7001
                    peer-bind-addr: $private_ipv4:7001

                  fleet:
                    public-ip: $private_ipv4
                    metadata: kubernetes_role=master

                  update:
                    reboot-strategy: etcd-lock

                  units:
                    #- name: nova-agent-watcher.service
                    #  command: try-restart
                    - name: etcd.service
                      command: start
                    - name: master-apiserver.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes API Server
                        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
                        After=network-online.target
                        Requires=network-online.target
                        After=minion-finder.service
                        Requires=minion-finder.service
                        [Service]
                        EnvironmentFile=-/run/apiserver/minions.env
                        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/apiserver
                        ExecStartPre=/usr/bin/chmod +x /opt/bin/apiserver
                        ExecStart=/opt/bin/apiserver --address=127.0.0.1 --port=8080 --machines=${MINIONS} --etcd_servers=http://127.0.0.1:4001 --logtostderr=true
                        Restart=always
                        RestartSec=2
                    - name: minion-finder.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Minion finder
                        After=network-online.target
                        Requires=network-online.target
                        After=etcd.service
                        Requires=etcd.service
                        [Service]
                        ExecStartPre=/opt/bin/regen-minion-list.sh
                        ExecStart=/usr/bin/etcdctl exec-watch --recursive /corekube/minions -- /opt/bin/regen-minion-list.sh
                        Restart=always
                        RestartSec=30
                    - name: master-controller-manager.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Controller Manager
                        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
                        After=network-online.target
                        Requires=network-online.target
                        After=master-apiserver.service
                        Requires=master-apiserver.service
                        [Service]
                        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/controller-manager
                        ExecStartPre=/usr/bin/chmod +x /opt/bin/controller-manager
                        ExecStart=/opt/bin/controller-manager --master=127.0.0.1:8080 --logtostderr=true
                        Restart=always
                        RestartSec=2
                    - name: master-scheduler.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Scheduler
                        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
                        After=network-online.target
                        Requires=network-online.target
                        After=master-apiserver.service
                        Requires=master-apiserver.service
                        [Service]
                        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/scheduler
                        ExecStartPre=/usr/bin/chmod +x /opt/bin/scheduler
                        ExecStart=/opt/bin/scheduler --master=127.0.0.1:8080 --logtostderr=true
                        Restart=always
                        RestartSec=10
                    - name: format-data.service
                      command: start
                      content: |
                        [Unit]
                        Description=Formats data drive
                        [Service]
                        Type=oneshot
                        RemainAfterExit=yes
                        ExecStart=/usr/sbin/wipefs -f %data_dev%
                        ExecStart=/usr/sbin/mkfs.btrfs -f %data_dev%
                    - name: var-lib-docker-volumes.mount
                      command: start
                      content: |
                        [Unit]
                        Description=Mount data drive to /var/lib/docker/volumes
                        Requires=format-data.service
                        After=format-data.service
                        Before=docker.service
                        [Mount]
                        What=%data_dev%
                        Where=/var/lib/docker/volumes
                        Type=btrfs
                write_files:
                  - path: /opt/bin/regen-minion-list.sh
                    permissions: 0755
                    content: |
                      #!/bin/sh
                      m=$(echo $(etcdctl ls --recursive /corekube/minions | cut -d/ -f4 | sort) | tr ' ' ,)
                      echo "Found $m"
                      mkdir -p /run/apiserver
                      echo "MINIONS=$m" > /run/apiserver/minions.env
              params:
                "%discovery%": { get_attr: [discovery, networks, private, 0] }
                "%uuid%": { get_attr: [coreos-cluster-uuid, value] }
                "%data_dev%": /dev/xvde1

  minion_machines:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: kubernetes-minion-count }
      resource_def:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: key-name }
          image: { get_param: coreos-image }
          flavor: { get_param: flavor }
          name: kubernetes-minion-%index%
          networks:
          - uuid: "00000000-0000-0000-0000-000000000000"
          - uuid: "11111111-1111-1111-1111-111111111111"
          - uuid: { get_resource: priv_network }
          user_data_format: RAW
          config_drive: "true"
          user_data:
            str_replace:
              template: |
                #cloud-config

                coreos:
                  etcd:
                    name: kubernetes-minion-%index%
                    discovery: http://%discovery%:4001/v2/keys/_etcd/registry/%uuid%
                    addr: $private_ipv4:4001
                    peer-addr: $private_ipv4:7001
                    peer-bind-addr: $private_ipv4:7001

                  fleet:
                    public-ip: $private_ipv4
                    metadata: kubernetes_role=minion

                  update:
                    reboot-strategy: etcd-lock

                  units:
                    - name: etcd.service
                      command: start
                    - name: minion-kubelet.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Kubelet
                        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
                        After=network-online.target
                        Requires=network-online.target
                        After=docker.service
                        Requires=docker.service
                        [Service]
                        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/kubelet
                        ExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet
                        ExecStart=/opt/bin/kubelet --address=$private_ipv4 --port=10250 --hostname_override=$private_ipv4 --etcd_servers=http://127.0.0.1:4001 --logtostderr=true
                        Restart=always
                        RestartSec=2
                    - name: minion-proxy.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Proxy
                        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
                        After=network-online.target
                        Requires=network-online.target
                        After=docker.service
                        Requires=docker.service
                        [Service]
                        ExecStartPre=/usr/bin/wget -N -P /opt/bin http://storage.googleapis.com/kubernetes/proxy
                        ExecStartPre=/usr/bin/chmod +x /opt/bin/proxy
                        ExecStart=/opt/bin/proxy --bindaddress=0.0.0.0 --etcd_servers=http://127.0.0.1:4001 --logtostderr=true
                        Restart=always
                        RestartSec=2
                    - name: minion-advertiser.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Minion Advertiser
                        After=etcd.service
                        Requires=etcd.service
                        After=minion-kubelet.service
                        [Service]
                        ExecStart=/bin/sh -c 'while :; do etcdctl set /corekube/minions/$private_ipv4 $private_ipv4 --ttl 300; sleep 120; done'
                        Restart=always
                        RestartSec=120
                    - name: net-advertiser.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Network Advertiser
                        After=etcd.service
                        Requires=etcd.service
                        After=minion-kubelet.service
                        [Service]
                        ExecStart=/bin/sh -c 'eth2_ip=$$(ip -o -f inet a show dev eth2 | sed "s/.* inet \([0-9.]\+\).*/\1/"); while :; do etcdctl set /corekube/net/$$eth2_ip 10.245.%index%.0/24 --ttl 300; sleep 120; done'
                        Restart=always
                        RestartSec=120
                    - name: net-router.service
                      command: start
                      content: |
                        [Unit]
                        Description=Kubernetes Network Router
                        After=etcd.service
                        Requires=etcd.service
                        After=minion-kubelet.service
                        [Service]
                        ExecStart=/usr/bin/etcdctl exec-watch --recursive /corekube/net -- /opt/bin/kube-net-update.sh
                        Restart=always
                        RestartSec=120
                    - name: cbr0.netdev
                      command: start
                      content: |
                        [NetDev]
                        Kind=bridge
                        Name=cbr0
                    - name: cbr0.network
                      command: start
                      content: |
                        [Match]
                        Name=cbr0

                        [Network]
                        Address=10.245.%index%.254/24
                    - name: nat.service
                      command: start
                      content: |
                        [Unit]
                        Description=NAT container->outside traffic

                        [Service]
                        ExecStart=/usr/sbin/iptables -t nat -A POSTROUTING -o eth0 -s %pod_subnet% -j MASQUERADE
                        ExecStart=/usr/sbin/iptables -t nat -A POSTROUTING -o eth1 -s %pod_subnet% -j MASQUERADE
                        RemainAfterExit=yes
                        Type=oneshot
                    - name: docker.service
                      command: start
                      content: |
                        [Unit]
                        After=network.target
                        Description=Docker Application Container Engine
                        Documentation=http://docs.docker.io

                        [Service]
                        ExecStartPre=/bin/mount --make-rprivate /
                        ExecStart=/usr/bin/docker -d -s=btrfs -H fd:// -b cbr0 --iptables=false
                        Restart=always
                        RestartSec=30

                        [Install]
                        WantedBy=multi-user.target
                    - name: format-data.service
                      command: start
                      content: |
                        [Unit]
                        Description=Formats data drive
                        [Service]
                        Type=oneshot
                        RemainAfterExit=yes
                        ExecStart=/usr/sbin/wipefs -f %data_dev%
                        ExecStart=/usr/sbin/mkfs.btrfs -f %data_dev%
                    - name: var-lib-docker-volumes.mount
                      command: start
                      content: |
                        [Unit]
                        Description=Mount data drive to /var/lib/docker/volumes
                        Requires=format-data.service
                        After=format-data.service
                        Before=docker.service
                        [Mount]
                        What=%data_dev%
                        Where=/var/lib/docker/volumes
                        Type=btrfs
                write_files:
                  - path: /opt/bin/kube-net-update.sh
                    permissions: 0755
                    content: |
                      #!/bin/sh
                      set -x -e
                      nh=${ETCD_WATCH_KEY##*/}
                      net=$ETCD_WATCH_VALUE
                      case $ETCD_WATCH_ACTION in
                      set) ip route replace $net via $nh dev eth2 metric 900 ;;
                      expire) ip route del $net via $nh metric 900 ;;
                      esac
              params:
                "%discovery%": { get_attr: [discovery, networks, private, 0] }
                "%uuid%": { get_attr: [coreos-cluster-uuid, value] }
                "%data_dev%": /dev/xvde1
                "%pod_subnet%": 10.245.%index%.0/24
